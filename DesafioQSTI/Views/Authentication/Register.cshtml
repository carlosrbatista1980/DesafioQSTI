@model DesafioQSTI.Models.ClienteViewModel
@{
    ViewData["Title"] = "Register";
}
<!-- container -->
<div class="container">

    <ol class="breadcrumb">
        <li><a href="index.html">Home</a></li>
        <li class="active">Registration</li>
    </ol>

    <div class="row">

        <!-- Article main content -->
        <article class="col-xs-12 maincontent">
            <header class="page-header">
                <h1 class="page-title">
                    Registration
                </h1>

                @if (ViewData["Error"] != null)
                {
                    <div class="alert alert-danger" id="error-alert">
                        <p><strong>Error:</strong> @ViewData["Error"]</p>
                    </div>
                }
                @if (ViewData["Success"] != null)
                {
                    <div class="alert alert-success" id="success-alert">
                        <p><strong>Success:</strong> @ViewData["Success"]</p>
                    </div>
                }

            </header>

            <div class="col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <h3 class="thin text-center">Registre uma nova conta</h3>
                        <p class="text-center text-muted">Se você já tiver uma conta faça, <a asp-controller="Authentication" asp-action="Login"><span class="badge badge-info">Login</span></a> para prosseguir.</p>
                        <hr>

                        <form asp-action="CreateAccount" asp-controller="Authentication" name="form1" id="form1">
                            <div class="top-margin">
                                <label><i class="fas fa-user"></i> Conta</label>
                                <input type="text" class="form-control" asp-for="@Model.Nome" placeholder="Account" name="nome" id="nome" value="@Model?.Nome">
                                <span class="alert-danger">@Html.ValidationMessageFor(validation => validation.Nome)</span>
                            </div>
                            <div class="row top-margin">
                                <div class="col-sm-6">
                                    <label><i class="fas fa-key"></i> Senha <span class="text-danger">*</span></label>
                                    <input type="password" class="form-control" asp-for="@Model.Senha" placeholder="Password" name="senha" id="senha" value="@Model?.Senha">
                                    <span class="alert-danger">@Html.ValidationMessageFor(validation => validation.Senha)</span>
                                </div>
                            </div>

                            <hr>

                            <div class="row">
                                <div class="col-lg-4 text-right">
                                    <button class="btn btn-action" type="submit">Register</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

            </div>

        </article>
        <!-- /Article -->

    </div>
</div>	<!-- /container -->
<!-- Validation scripts -->
<script>
    @section  Scripts {
        @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    }
</script>


