@using DesafioQSTI.Data.Repository
@model DesafioQSTI.Models.ServicoClientesViewModel

@{
    ViewData["Title"] = "Editar Ordem de Serviço";
}

<br />
<h1>@ViewData["Title"]</h1>
<br />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">

                <label>Servicos: </label>
                <select asp-for="ServicoId" asp-items="@(new SelectList(Model.Servicos, "Id", "Nome"));" class="form-control"></select>

                <label>Clientes: </label>
                <select asp-for="ClienteId" asp-items="@(new SelectList(Model.Clientes, "Id", "Nome"));" class="form-control"></select>

                <label asp-for="Versao" class="control-label"></label>
                <input asp-for="Versao" class="form-control" id="versao" name="versao" />

            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
